name: Deploy to Azure Container Apps

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
  IMAGE_NAME: laravel-app
  RESOURCE_GROUP: anima
  CONTAINER_APP_NAME: anima-app
  CONTAINER_APP_ENV: managedEnvironment-anima-a668

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Login a Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Construir y empujar imagen Docker
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Login a Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Desplegar a Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          containerAppEnvironment: ${{ env.CONTAINER_APP_ENV }}
          imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          targetPort: 80
          ingress: external
          environmentVariables: |
            APP_ENV=production
            APP_DEBUG=false
            APP_KEY=${{ secrets.APP_KEY }}
            DB_CONNECTION=pgsql
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=5432
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            REDIS_PORT=6380
            CACHE_DRIVER=redis
            SESSION_DRIVER=redis
            QUEUE_CONNECTION=redis
